#include<stdio.h>
#include<stdlib.h>
#include<math.h>

int if_new(char c,int letters[37])
{
    switch( c )
    {
        case '0':if( letters[0]==0 ){ letters[0]=1;return 1; }else return 0;
        case '1':if( letters[1]==0 ){ letters[1]=1;return 1; }else return 0;
        case '2':if( letters[2]==0 ){ letters[2]=1;return 1; }else return 0;
        case '3':if( letters[3]==0 ){ letters[3]=1;return 1; }else return 0;
        case '4':if( letters[4]==0 ){ letters[4]=1;return 1; }else return 0;
        case '5':if( letters[5]==0 ){ letters[5]=1;return 1; }else return 0;
        case '6':if( letters[6]==0 ){ letters[6]=1;return 1; }else return 0;;
        case '7':if( letters[7]==0 ){ letters[7]=1;return 1; }else return 0;
        case '8':if( letters[8]==0 ){ letters[8]=1;return 1; }else return 0;
        case '9':if( letters[9]==0 ){ letters[9]=1;return 1; }else return 0;
        case 'a':if( letters[10]==0 ){ letters[10]=1;return 1; }else return 0;
        case 'b':if( letters[11]==0 ){ letters[11]=1;return 1; }else return 0;
        case 'c':if( letters[12]==0 ){ letters[12]=1;return 1; }else return 0;
        case 'd':if( letters[13]==0 ){ letters[13]=1;return 1; }else return 0;;
        case 'e':if( letters[14]==0 ){ letters[14]=1;return 1; }else return 0;
        case 'f':if( letters[15]==0 ){ letters[15]=1;return 1; }else return 0;
        case 'g':if( letters[16]==0 ){ letters[16]=1;return 1; }else return 0;
        case 'h':if( letters[17]==0 ){ letters[17]=1;return 1; }else return 0;
        case 'i':if( letters[18]==0 ){ letters[18]=1;return 1; }else return 0;
        case 'j':if( letters[19]==0 ){ letters[19]=1;return 1; }else return 0;
        case 'k':if( letters[20]==0 ){ letters[20]=1;return 1; }else return 0;
        case 'l':if( letters[21]==0 ){ letters[21]=1;return 1; }else return 0;
        case 'm':if( letters[22]==0 ){ letters[22]=1;return 1; }else return 0;
        case 'n':if( letters[23]==0 ){ letters[23]=1;return 1; }else return 0;
        case 'o':if( letters[24]==0 ){ letters[24]=1;return 1; }else return 0;
        case 'p':if( letters[25]==0 ){ letters[25]=1;return 1; }else return 0;
        case 'q':if( letters[26]==0 ){ letters[26]=1;return 1; }else return 0;
        case 'r':if( letters[27]==0 ){ letters[27]=1;return 1; }else return 0;
        case 's':if( letters[28]==0 ){ letters[28]=1;return 1; }else return 0;
        case 't':if( letters[29]==0 ){ letters[29]=1;return 1; }else return 0;
        case 'u':if( letters[30]==0 ){ letters[30]=1;return 1; }else return 0;
        case 'v':if( letters[31]==0 ){ letters[31]=1;return 1; }else return 0;
        case 'w':if( letters[32]==0 ){ letters[32]=1;return 1; }else return 0;
        case 'x':if( letters[33]==0 ){ letters[33]=1;return 1; }else return 0;
        case 'y':if( letters[34]==0 ){ letters[34]=1;return 1; }else return 0;
        case 'z':if( letters[35]==0 ){ letters[35]=1;return 1; }else return 0;
        case '_':if( letters[36]==0 ){ letters[36]=1;return 1; }else return 0;
    }
}
int main()
{
    char Should_get[80];
    char Reality_get[80];
    scanf("%s",Should_get);
    scanf("%s",Reality_get);

    int letters[37];
    int i,j;
    int count;
    for( i=0 ; i<37 ; i++ ) letters[i]=0;
    for( i=0 ; Should_get[i]!='\0' ; i++ )
    {
        count=0;
        if( Should_get[i]>='A' && Should_get[i]<='Z' ) Should_get[i]+=32;
        if( if_new(Should_get[i],letters) ) //如果这个字符没有出现过
        {
            for( j=0 ; Reality_get[j]!='\0' ; j++ )
            {
                if( Should_get[i]==Reality_get[j] )
                {
                    count=1;
                    break;
                }
                if( Should_get[i]-32==Reality_get[j] )
                {
                    count=1;
                    break;
                }
                if( Should_get[i]+32==Reality_get[j] )
                {
                    count=1;
                    break;
                }
            }
            if( !count )
            {
                if( Should_get[i]>='a' && Should_get[i]<='z' ) printf("%c",Should_get[i]-32);
                else printf("%c",Should_get[i]);
            }
        }
    }

    return 0;
}







